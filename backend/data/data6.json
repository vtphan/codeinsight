{
  "analysisData": {
    "aggregate_analysis": {
      "top_errors": [
        {
          "category": "Incomplete Planning",
          "occurrence_count": 6,
          "occurrence_percentage": "20.00%",
          "description": "Students starting implementation without clear understanding of the full solution, leading to incomplete or abandoned code",
          "example_code": [
            "def word_count(text):\n    words = text.split()\n    # this is too hard",
            "# I will submit this now.",
            "def word_count(text):\n    words = text.split()\n    counts_list = []\n    for word in words:\n        # how many times is this word in the list?\n        count = words.count(word)"
          ],
          "student_ids": [78, 103, 104, 106, 110, 89]
        },
        {
          "category": "Wrong Data Structure Choice",
          "occurrence_count": 2,
          "occurrence_percentage": "6.67%",
          "description": "Students using inappropriate data structures like lists instead of dictionaries for counting",
          "example_code": [
            "def word_count(text):\n    words = text.lower().split()\n    counts = []\n    for word in words:\n        found = False\n        for item in counts:\n            if item[0] == word:\n                item[1] += 1\n                found = True\n                break\n        if not found:\n            counts.append([word, 1])\n    return counts"
          ],
          "student_ids": [107, 78]
        },
        {
          "category": "Problem Misunderstanding",
          "occurrence_count": 2,
          "occurrence_percentage": "6.67%",
          "description": "Students misinterpreting the problem requirements, such as counting word lengths instead of frequencies",
          "example_code": [
            "def word_count(text):\n    \"\"\"Takes text and returns a dictionary of word counts.\"\"\"\n    word_lengths = {}\n    # is this right?\n    for word in text.split():\n        if word:\n            word_lengths[word] = len(word)\n    return word_lengths"
          ],
          "student_ids": [88, 89]
        },
        {
          "category": "Stuck Pattern",
          "occurrence_count": 2,
          "occurrence_percentage": "6.67%",
          "description": "Students recognizing they are stuck but unable to progress, often with incomplete logic",
          "example_code": [
            "def word_count(text):\n    counts = {}\n    word_list = text.split()\n    for word in word_list:\n      # I am stuck\n      counts[word] = 1 # this just sets it to 1 every time\n    return counts"
          ],
          "student_ids": [89, 110]
        },
        {
          "category": "Missing Key Concepts",
          "occurrence_count": 1,
          "occurrence_percentage": "3.33%",
          "description": "Students missing essential concepts like proper conditional logic for counting",
          "example_code": [
            "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words\n        if word in counts:\n          counts[word] = counts[word] + 1\n        else\n          counts[word] = 1"
          ],
          "student_ids": [79]
        }
      ],
      "error_correlations": [
        {
          "correlated_errors": ["Incomplete Planning", "Stuck Pattern"],
          "correlation_count": 2,
          "correlation_percentage": "6.67%",
          "hypothesis": "Students who don't plan their approach thoroughly tend to get stuck when they encounter logical challenges",
          "example_code": [
            "def word_count(text):\n    words = text.split()\n    # this is too hard",
            "def word_count(text):\n    counts = {}\n    word_list = text.split()\n    for word in word_list:\n      # I am stuck\n      counts[word] = 1 # this just sets it to 1 every time\n    return counts"
          ],
          "student_ids": [110, 89]
        },
        {
          "correlated_errors": ["Problem Misunderstanding", "Stuck Pattern"],
          "correlation_count": 1,
          "correlation_percentage": "3.33%",
          "hypothesis": "Students who misunderstand the problem requirements are more likely to get stuck when their approach doesn't work",
          "example_code": [
            "def word_count(text):\n    counts = {}\n    word_list = text.split()\n    for word in word_list:\n      # I am stuck\n      counts[word] = 1 # this just sets it to 1 every time\n    return counts"
          ],
          "student_ids": [89]
        }
      ],
      "potential_misconceptions": [
        {
          "misconception": "Dictionary counting logic confusion",
          "related_error_categories": ["Stuck Pattern", "Problem Misunderstanding", "Missing Key Concepts"],
          "occurrence_count": 3,
          "occurrence_percentage": "10.00%",
          "explanation_diagnostic": "Students understand they need to use a dictionary but struggle with the conditional logic needed to increment existing keys versus creating new ones",
          "example_code_error": [
            "counts = {}",
            "for word in word_list:",
            "  # I am stuck", 
            "  counts[word] = 1 # this just sets it to 1 every time"
          ],
          "student_ids": [89, 79, 88],
          "suggested_explanation_for_students": "When counting with dictionaries, you need to check if a word already exists as a key. If it does, add 1 to its current value. If it doesn't exist yet, start it at 1.",
          "correct_approach_hint": [
            "if word in counts:",
            "    counts[word] += 1",
            "else:",
            "    counts[word] = 1"
          ],
          "follow_up_question": "What should happen differently when you encounter a word for the first time versus when you've seen it before?"
        },
        {
          "misconception": "Data structure selection for counting problems",
          "related_error_categories": ["Wrong Data Structure Choice", "Incomplete Planning"],
          "occurrence_count": 2,
          "occurrence_percentage": "6.67%",
          "explanation_diagnostic": "Students attempt to use lists or other structures instead of dictionaries for counting, leading to overly complex solutions",
          "example_code_error": [
            "counts = []",
            "for item in counts:",
            "    if item[0] == word:",
            "        item[1] += 1"
          ],
          "student_ids": [107, 78],
          "suggested_explanation_for_students": "For counting problems, dictionaries are ideal because they let you use the item being counted as the key and store the count as the value. This makes lookups and updates much simpler.",
          "correct_approach_hint": [
            "counts = {}",
            "for word in words:",
            "    counts[word] = counts.get(word, 0) + 1"
          ],
          "follow_up_question": "Why might a dictionary be more efficient than a list for this counting task?"
        }
      ]
    },
    "individual_assessment": [
    {
      "performance_level": "NotAssessed",
      "student_id": 80
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 81
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 82
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 83
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 84
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 85
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 86
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 87
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 88
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 89
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 101
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 102
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 103
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 104
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 105
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 106
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 107
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 108
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 109
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 110
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 70
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 71
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 72
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 73
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 74
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 75
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 76
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 77
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 78
    },
    {
      "performance_level": "NotAssessed",
      "student_id": 79
    }
  ],
    "isEnable": true,
    "overall_assessment": {
      "performance_distribution": {
        "correct": {
          "count": 3,
          "percentage": "27.27%"
        },
        "incorrect": {
          "count": 1,
          "percentage": "9.09%"
        },
        "not_assessed": {
          "count": 7,
          "percentage": "63.64%"
        }
      },
      "total_entries": 30
    },
    "problem_summary": {
      "title": "Word Count"
    }
  },
    "codeSnapshots": {
      "entries": [
        {
          "student_id": 72,
          "content": "def word_count(text):\n  pass",
          "timestamp": "2024-10-26 14:00:30",
          "snapshot_id": 56,
          "grade": ""
        },
        {
          "student_id": 101,
          "content": "def word_count(text):\n    pass",
          "timestamp": "2024-10-26 14:00:30",
          "snapshot_id": 1,
          "grade": ""
        },
        {
          "student_id": 103,
          "content": "def word_count(text):\n    words = text.split()",
          "timestamp": "2024-10-26 14:00:30",
          "snapshot_id": 2,
          "grade": ""
        },
        {
          "student_id": 80,
          "content": "def word_count(text):\n    pass",
          "timestamp": "2024-10-26 14:00:35",
          "snapshot_id": 1,
          "grade": ""
        },
        {
          "student_id": 82,
          "content": "def word_count(text):\n    words = text.split()",
          "timestamp": "2024-10-26 14:00:42",
          "snapshot_id": 2,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    pass",
          "timestamp": "2024-10-26 14:00:45",
          "snapshot_id": 1,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    pass",
          "timestamp": "2024-10-26 14:00:45",
          "snapshot_id": 76,
          "grade": ""
        },
        {
          "student_id": 105,
          "content": "def word_count(text):",
          "timestamp": "2024-10-26 14:00:45",
          "snapshot_id": 3,
          "grade": ""
        },
        {
          "student_id": 107,
          "content": "def word_count(text):\n    counts = []",
          "timestamp": "2024-10-26 14:00:45",
          "snapshot_id": 4,
          "grade": ""
        },
        {
          "student_id": 109,
          "content": "def word_count(text):\n    counts = {}",
          "timestamp": "2024-10-26 14:00:45",
          "snapshot_id": 5,
          "grade": ""
        },
        {
          "student_id": 88,
          "content": "def word_count(text):\n  words = []",
          "timestamp": "2024-10-26 14:00:48",
          "snapshot_id": 3,
          "grade": ""
        },
        {
          "student_id": 80,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}",
          "timestamp": "2024-10-26 14:00:50",
          "snapshot_id": 4,
          "grade": ""
        },
        {
          "student_id": 84,
          "content": "def count_words(txt):\n    pass",
          "timestamp": "2024-10-26 14:00:55",
          "snapshot_id": 5,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    words = text.split()\n    ",
          "timestamp": "2024-10-26 14:01:00",
          "snapshot_id": 2,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def count_words(text):\n    pass",
          "timestamp": "2024-10-26 14:01:00",
          "snapshot_id": 32,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n  # need to clean text first\n  # lowercase, remove punctuation",
          "timestamp": "2024-10-26 14:01:00",
          "snapshot_id": 57,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    # okay, need a dictionary\n    counts = {}",
          "timestamp": "2024-10-26 14:01:00",
          "snapshot_id": 77,
          "grade": ""
        },
        {
          "student_id": 76,
          "content": "def word_count(text):\n    words = text.split()",
          "timestamp": "2024-10-26 14:01:00",
          "snapshot_id": 126,
          "grade": ""
        },
        {
          "student_id": 102,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}",
          "timestamp": "2024-10-26 14:01:00",
          "snapshot_id": 6,
          "grade": ""
        },
        {
          "student_id": 110,
          "content": "def word_count(text):\n    # how to count?",
          "timestamp": "2024-10-26 14:01:00",
          "snapshot_id": 7,
          "grade": ""
        },
        {
          "student_id": 86,
          "content": "def word_counter(text):\n  # split text to words",
          "timestamp": "2024-10-26 14:01:02",
          "snapshot_id": 6,
          "grade": ""
        },
        {
          "student_id": 82,
          "content": "def word_count(text):\n    text = text.lower()\n    words = text.split()",
          "timestamp": "2024-10-26 14:01:03",
          "snapshot_id": 7,
          "grade": ""
        },
        {
          "student_id": 89,
          "content": "def word_count(text):\n    counts = {}",
          "timestamp": "2024-10-26 14:01:10",
          "snapshot_id": 8,
          "grade": ""
        },
        {
          "student_id": 80,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:",
          "timestamp": "2024-10-26 14:01:11",
          "snapshot_id": 9,
          "grade": ""
        },
        {
          "student_id": 88,
          "content": "def word_count(text):\n  counts = {}\n  words = text.split(' ')",
          "timestamp": "2024-10-26 14:01:13",
          "snapshot_id": 10,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    words = text.split()\n    word_counts = {}",
          "timestamp": "2024-10-26 14:01:15",
          "snapshot_id": 3,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    pass",
          "timestamp": "2024-10-26 14:01:15",
          "snapshot_id": 33,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    pass",
          "timestamp": "2024-10-26 14:01:15",
          "snapshot_id": 93,
          "grade": ""
        },
        {
          "student_id": 76,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}",
          "timestamp": "2024-10-26 14:01:15",
          "snapshot_id": 127,
          "grade": ""
        },
        {
          "student_id": 101,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}",
          "timestamp": "2024-10-26 14:01:15",
          "snapshot_id": 8,
          "grade": ""
        },
        {
          "student_id": 103,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    return counts",
          "timestamp": "2024-10-26 14:01:15",
          "snapshot_id": 9,
          "grade": ""
        },
        {
          "student_id": 105,
          "content": "def word_count(text):\n    words = text.split()",
          "timestamp": "2024-10-26 14:01:15",
          "snapshot_id": 10,
          "grade": ""
        },
        {
          "student_id": 81,
          "content": "def word_count(text):\n    text = text.lower()\n    words = text.split()\n    word_counts = {}",
          "timestamp": "2024-10-26 14:01:18",
          "snapshot_id": 11,
          "grade": ""
        },
        {
          "student_id": 84,
          "content": "def count_words(txt):\n    words = txt.split()",
          "timestamp": "2024-10-26 14:01:20",
          "snapshot_id": 12,
          "grade": ""
        },
        {
          "student_id": 86,
          "content": "def word_counter(text):\n  words = text.split()\n  counts = {}",
          "timestamp": "2024-10-26 14:01:22",
          "snapshot_id": 13,
          "grade": ""
        },
        {
          "student_id": 82,
          "content": "def word_count(text):\n    text = text.lower()\n    # remove punctuation somehow\n    words = text.split()\n    word_counts = {}",
          "timestamp": "2024-10-26 14:01:25",
          "snapshot_id": 14,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    words = text.split()\n    word_counts = {}\n    for word in words:",
          "timestamp": "2024-10-26 14:01:30",
          "snapshot_id": 4,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n  # iterate and build new string\n  cleaned_str = \"\"",
          "timestamp": "2024-10-26 14:01:30",
          "snapshot_id": 58,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    # first clean the input string\n    # lowercase and remove punctuation\n    clean_text = text.lower()",
          "timestamp": "2024-10-26 14:01:30",
          "snapshot_id": 78,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    words = text.split()",
          "timestamp": "2024-10-26 14:01:30",
          "snapshot_id": 94,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_counter(text):\n    pass",
          "timestamp": "2024-10-26 14:01:30",
          "snapshot_id": 110,
          "grade": ""
        },
        {
          "student_id": 78,
          "content": "def count_chars(text):\n    pass",
          "timestamp": "2024-10-26 14:01:30",
          "snapshot_id": 157,
          "grade": ""
        },
        {
          "student_id": 104,
          "content": "def word_count(text):\n  pass",
          "timestamp": "2024-10-26 14:01:30",
          "snapshot_id": 11,
          "grade": ""
        },
        {
          "student_id": 108,
          "content": "def count_chars(text):",
          "timestamp": "2024-10-26 14:01:30",
          "snapshot_id": 12,
          "grade": ""
        },
        {
          "student_id": 109,
          "content": "def word_count(text):\n    words = text.split()\n    for word in words:\n        pass",
          "timestamp": "2024-10-26 14:01:30",
          "snapshot_id": 13,
          "grade": ""
        },
        {
          "student_id": 80,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1",
          "timestamp": "2024-10-26 14:01:31",
          "snapshot_id": 15,
          "grade": ""
        },
        {
          "student_id": 89,
          "content": "def word_count(text):\n    counts = {}\n    for word in text.split():\n        counts[word] += 1 # this might be wrong",
          "timestamp": "2024-10-26 14:01:33",
          "snapshot_id": 16,
          "grade": ""
        },
        {
          "student_id": 85,
          "content": "def count_words(txt):\n    words = txt.split()\n    result = {}",
          "timestamp": "2024-10-26 14:01:38",
          "snapshot_id": 17,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        # how to count?",
          "timestamp": "2024-10-26 14:01:45",
          "snapshot_id": 5,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    # step 1: split string into words\n    words = text.split()",
          "timestamp": "2024-10-26 14:01:45",
          "snapshot_id": 34,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n  cleaned_str = \"\"\n  for char in text.lower():",
          "timestamp": "2024-10-26 14:01:45",
          "snapshot_id": 59,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}",
          "timestamp": "2024-10-26 14:01:45",
          "snapshot_id": 95,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_counter(text):\n    word_list = text.split()",
          "timestamp": "2024-10-26 14:01:45",
          "snapshot_id": 111,
          "grade": ""
        },
        {
          "student_id": 76,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1",
          "timestamp": "2024-10-26 14:01:45",
          "snapshot_id": 128,
          "grade": ""
        },
        {
          "student_id": 77,
          "content": "def word_count(text):\n  # step 1: make it all one case\n  lower_text = text.lower()",
          "timestamp": "2024-10-26 14:01:45",
          "snapshot_id": 142,
          "grade": ""
        },
        {
          "student_id": 82,
          "content": "def word_count(text):\n    text = text.lower()\n    # remove punctuation somehow\n    clean_text = text.replace('.', '')\n    words = clean_text.split()\n    word_counts = {}",
          "timestamp": "2024-10-26 14:01:45",
          "snapshot_id": 18,
          "grade": ""
        },
        {
          "student_id": 106,
          "content": "def word_count(text):\n    words = text.split()\n    for word in words:\n        pass",
          "timestamp": "2024-10-26 14:01:45",
          "snapshot_id": 14,
          "grade": ""
        },
        {
          "student_id": 107,
          "content": "def word_count(text):\n    words = text.split()\n    counts = []\n    for word in words:",
          "timestamp": "2024-10-26 14:01:45",
          "snapshot_id": 15,
          "grade": ""
        },
        {
          "student_id": 88,
          "content": "def word_count(text):\n  counts = {}\n  for word in text.split(' '):\n    counts[word] = len(word) # count is length?",
          "timestamp": "2024-10-26 14:01:46",
          "snapshot_id": 19,
          "grade": ""
        },
        {
          "student_id": 84,
          "content": "def count_words(txt):\n    words = txt.split()\n    result = {}\n    for word in words:\n        if word in result:\n            result[word] += 1\n        else:\n            result[word] = 1",
          "timestamp": "2024-10-26 14:01:48",
          "snapshot_id": 20,
          "grade": ""
        },
        {
          "student_id": 80,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:01:50",
          "snapshot_id": 21,
          "grade": ""
        },
        {
          "student_id": 86,
          "content": "def word_counter(text):\n  words = text.split()\n  counts = {}\n  for w in words:\n      counts[w] = counts.get(w, 0) + 1",
          "timestamp": "2024-10-26 14:01:52",
          "snapshot_id": 22,
          "grade": ""
        },
        {
          "student_id": 81,
          "content": "def word_count(text):\n    text = text.lower()\n    words = text.split()\n    word_counts = {}\n    for w in words:\n        if w in word_counts:\n            word_counts[w] += 1\n        else:\n            word_counts[w] = 1",
          "timestamp": "2024-10-26 14:01:55",
          "snapshot_id": 23,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    # step 1: split string into words\n    words = text.split()\n    # step 2: create a dictionary to store counts\n    counts = {}",
          "timestamp": "2024-10-26 14:02:00",
          "snapshot_id": 35,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    clean_text = text.lower()\n    # how to remove all punctuation?\n    # loop and replace seems best\n    punctuation = '.,!?'",
          "timestamp": "2024-10-26 14:02:00",
          "snapshot_id": 79,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:",
          "timestamp": "2024-10-26 14:02:00",
          "snapshot_id": 96,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_counter(text):\n    word_list = text.split()\n    the_dict = {}",
          "timestamp": "2024-10-26 14:02:00",
          "snapshot_id": 112,
          "grade": ""
        },
        {
          "student_id": 76,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:02:00",
          "snapshot_id": 129,
          "grade": ""
        },
        {
          "student_id": 78,
          "content": "def count_chars(text):\n    # count each character\n    char_counts = {}\n    for char in text:",
          "timestamp": "2024-10-26 14:02:00",
          "snapshot_id": 158,
          "grade": ""
        },
        {
          "student_id": 79,
          "content": "def word_count(text)\n    pass",
          "timestamp": "2024-10-26 14:02:00",
          "snapshot_id": 177,
          "grade": ""
        },
        {
          "student_id": 102,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:",
          "timestamp": "2024-10-26 14:02:00",
          "snapshot_id": 16,
          "grade": ""
        },
        {
          "student_id": 85,
          "content": "def count_words(txt):\n    words = txt.split()\n    result = {}\n    for word in words:\n        if word in result:\n            result[word] += 1\n        else:\n            result[word] = 1\n    return result",
          "timestamp": "2024-10-26 14:02:03",
          "snapshot_id": 24,
          "grade": ""
        },
        {
          "student_id": 89,
          "content": "def word_count(text):\n    counts = {}\n    for word in text.split():\n        if word in counts:\n            counts[word] = counts[word] + 1\n        else:\n            counts[word] = 1",
          "timestamp": "2024-10-26 14:02:05",
          "snapshot_id": 25,
          "grade": ""
        },
        {
          "student_id": 80,
          "content": "def word_count(text):\n    # wait, case sensitive? \"Word\" and \"word\"\n    text = text.lower()\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:02:11",
          "snapshot_id": 26,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:",
          "timestamp": "2024-10-26 14:02:15",
          "snapshot_id": 6,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n  cleaned_str = \"\"\n  for char in text.lower():\n    if char.isalpha() or char.isspace():\n      cleaned_str += char",
          "timestamp": "2024-10-26 14:02:15",
          "snapshot_id": 60,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:",
          "timestamp": "2024-10-26 14:02:15",
          "snapshot_id": 97,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_counter(text):\n    word_list = text.split()\n    the_dict = {}\n    for w in word_list:",
          "timestamp": "2024-10-26 14:02:15",
          "snapshot_id": 113,
          "grade": ""
        },
        {
          "student_id": 77,
          "content": "def word_count(text):\n  # step 1: make it all one case\n  lower_text = text.lower()\n  # step 2: split into words\n  words = lower_text.split()",
          "timestamp": "2024-10-26 14:02:15",
          "snapshot_id": 143,
          "grade": ""
        },
        {
          "student_id": 84,
          "content": "def count_words(txt):\n    words = txt.split()\n    result = {}\n    for word in words:\n      result[word] = result.get(word, 0) + 1\n    return result",
          "timestamp": "2024-10-26 14:02:15",
          "snapshot_id": 27,
          "grade": ""
        },
        {
          "student_id": 101,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        pass",
          "timestamp": "2024-10-26 14:02:15",
          "snapshot_id": 17,
          "grade": ""
        },
        {
          "student_id": 103,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:02:15",
          "snapshot_id": 18,
          "grade": ""
        },
        {
          "student_id": 81,
          "content": "def word_count(text):\n    # this is good but problem says ignore punctuation\n    text = text.lower()\n    words = text.split()\n    word_counts = {}\n    for w in words:\n        if w in word_counts:\n            word_counts[w] += 1\n        else:\n            word_counts[w] = 1\n    return word_counts",
          "timestamp": "2024-10-26 14:02:20",
          "snapshot_id": 28,
          "grade": ""
        },
        {
          "student_id": 86,
          "content": "def word_counter(text):\n  # need to handle case\n  text = text.lower()\n  words = text.split()\n  counts = {}\n  for w in words:\n      counts[w] = counts.get(w, 0) + 1\n  return counts",
          "timestamp": "2024-10-26 14:02:22",
          "snapshot_id": 29,
          "grade": ""
        },
        {
          "student_id": 88,
          "content": "def word_count(text):\n  counts = {}\n  for word in text.split(' '):\n    counts[word] = len(word)\n  return counts # this is what it asks for, right?",
          "timestamp": "2024-10-26 14:02:26",
          "snapshot_id": 30,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:\n            word_counts[word] = word_counts[word] + 1",
          "timestamp": "2024-10-26 14:02:30",
          "snapshot_id": 7,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    # step 1: split string into words\n    words = text.split()\n    # step 2: create a dictionary to store counts\n    counts = {}\n    # step 3: loop through words and count them\n    for word in words:",
          "timestamp": "2024-10-26 14:02:30",
          "snapshot_id": 36,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    clean_text = text.lower()\n    punctuation = '.,!?'\n    for p in punctuation:\n        clean_text = clean_text.replace(p, ' ')",
          "timestamp": "2024-10-26 14:02:30",
          "snapshot_id": 80,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_counter(text):\n    word_list = text.split()\n    the_dict = {}\n    for w in word_list:\n        if w in the_dict:",
          "timestamp": "2024-10-26 14:02:30",
          "snapshot_id": 114,
          "grade": ""
        },
        {
          "student_id": 78,
          "content": "def count_chars(text):\n    # count each character\n    char_counts = {}\n    for char in text:\n        if char in char_counts:\n            char_counts[char] += 1\n        else:\n            char_counts[char] = 1",
          "timestamp": "2024-10-26 14:02:30",
          "snapshot_id": 159,
          "grade": ""
        },
        {
          "student_id": 79,
          "content": "def word_count(text) # forgot colon\n    words = text.split()",
          "timestamp": "2024-10-26 14:02:30",
          "snapshot_id": 178,
          "grade": ""
        },
        {
          "student_id": 82,
          "content": "def word_count(text):\n    text = text.lower()\n    text = text.replace('.', ' ')\n    text = text.replace(',', ' ')\n    text = text.replace('!', ' ')\n    text = text.replace('?', ' ')\n\n    words = text.split()\n    word_counts = {}",
          "timestamp": "2024-10-26 14:02:30",
          "snapshot_id": 31,
          "grade": ""
        },
        {
          "student_id": 104,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:02:30",
          "snapshot_id": 19,
          "grade": ""
        },
        {
          "student_id": 108,
          "content": "def count_chars(text):\n    counts = {}\n    for char in text:\n        counts[char] = 1",
          "timestamp": "2024-10-26 14:02:30",
          "snapshot_id": 20,
          "grade": ""
        },
        {
          "student_id": 110,
          "content": "def word_count(text):\n    # how to use a dictionary?",
          "timestamp": "2024-10-26 14:02:30",
          "snapshot_id": 21,
          "grade": ""
        },
        {
          "student_id": 80,
          "content": "def word_count(text):\n    text = text.lower()\n    text = text.replace('.', '') # this is better\n    text = text.replace(',', '')\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:02:35",
          "snapshot_id": 32,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:\n            word_counts[word] = word_counts[word] + 1\n        else:",
          "timestamp": "2024-10-26 14:02:45",
          "snapshot_id": 8,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n  cleaned_str = \"\"\n  for char in text.lower():\n    if char.isalpha() or char.isspace():\n      cleaned_str += char\n    else:\n      cleaned_str += ' '",
          "timestamp": "2024-10-26 14:02:45",
          "snapshot_id": 61,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    clean_text = text.lower()\n    punctuation = '.,!?'\n    for p in punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    \n    words = clean_text.split()",
          "timestamp": "2024-10-26 14:02:45",
          "snapshot_id": 81,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1",
          "timestamp": "2024-10-26 14:02:45",
          "snapshot_id": 98,
          "grade": ""
        },
        {
          "student_id": 76,
          "content": "def word_count(text):\n    # wait, caps matter\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:02:45",
          "snapshot_id": 130,
          "grade": ""
        },
        {
          "student_id": 78,
          "content": "def count_chars(text):\n    char_counts = {}\n    for char in text:\n        if char in char_counts:\n            char_counts[char] += 1\n        else:\n            char_counts[char] = 1\n    return char_counts",
          "timestamp": "2024-10-26 14:02:45",
          "snapshot_id": 160,
          "grade": ""
        },
        {
          "student_id": 79,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}",
          "timestamp": "2024-10-26 14:02:45",
          "snapshot_id": 179,
          "grade": ""
        },
        {
          "student_id": 81,
          "content": "def word_count(text):\n    text = text.lower()\n    text = text.replace('.', '')\n    text = text.replace(',', '')\n    words = text.split()\n    word_counts = {}\n    for w in words:\n        if w in word_counts:\n            word_counts[w] += 1\n        else:\n            word_counts[w] = 1\n    return word_counts",
          "timestamp": "2024-10-26 14:02:45",
          "snapshot_id": 33,
          "grade": ""
        },
        {
          "student_id": 101,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1",
          "timestamp": "2024-10-26 14:02:45",
          "snapshot_id": 22,
          "grade": ""
        },
        {
          "student_id": 106,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:02:45",
          "snapshot_id": 23,
          "grade": ""
        },
        {
          "student_id": 89,
          "content": "def word_count(text):\n    counts = {}\n    for word in text.split():\n        if word not in counts:\n            counts[word] = 1\n    return counts # wait, this doesnt increment",
          "timestamp": "2024-10-26 14:02:48",
          "snapshot_id": 34,
          "grade": ""
        },
        {
          "student_id": 86,
          "content": "def word_counter(text):\n  # what about punctuation? 'word.' is not 'word'\n  text = text.lower()\n  text = text.replace('.', '')\n  words = text.split()\n  counts = {}\n  for w in words:\n      counts[w] = counts.get(w, 0) + 1\n  return counts",
          "timestamp": "2024-10-26 14:02:55",
          "snapshot_id": 35,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:\n            word_counts[word] = word_counts[word] + 1\n        else:\n            word_counts[word] = 1",
          "timestamp": "2024-10-26 14:03:00",
          "snapshot_id": 9,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    # step 1: split string into words\n    words = text.split()\n    # step 2: create a dictionary to store counts\n    counts = {}\n    # step 3: loop through words and count them\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1",
          "timestamp": "2024-10-26 14:03:00",
          "snapshot_id": 37,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n  cleaned_str = \"\"\n  for char in text.lower():\n    if char.isalpha() or char.isspace():\n      cleaned_str += char\n    else:\n      cleaned_str += ' '\n  \n  words = cleaned_str.split()",
          "timestamp": "2024-10-26 14:03:00",
          "snapshot_id": 62,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    clean_text = text.lower()\n    punctuation = '.,!?'\n    for p in punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    \n    words = clean_text.split()\n    counts = {}",
          "timestamp": "2024-10-26 14:03:00",
          "snapshot_id": 82,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:00",
          "snapshot_id": 99,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_counter(text):\n    word_list = text.split()\n    the_dict = {}\n    for w in word_list:\n        if w in the_dict:\n            the_dict[w] = the_dict[w] + 1\n        else:\n            the_dict[w] = 1",
          "timestamp": "2024-10-26 14:03:00",
          "snapshot_id": 115,
          "grade": ""
        },
        {
          "student_id": 77,
          "content": "def word_count(text):\n  lower_text = text.lower()\n  words = lower_text.split()\n  # step 3: count\n  counts = {}\n  for word in words:\n    if word not in counts:\n      counts[word] = 0\n    counts[word] += 1",
          "timestamp": "2024-10-26 14:03:00",
          "snapshot_id": 144,
          "grade": ""
        },
        {
          "student_id": 82,
          "content": "def word_count(text):\n    text = text.lower()\n    punctuation = '.,!?'\n    for p in punctuation:\n        text = text.replace(p, ' ')\n\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:\n            word_counts[word] += 1\n        else:\n            word_counts[word] = 1",
          "timestamp": "2024-10-26 14:03:00",
          "snapshot_id": 36,
          "grade": ""
        },
        {
          "student_id": 107,
          "content": "def word_count(text):\n    words = text.split()\n    counts = []\n    for word in words:\n        found = False\n        for item in counts:\n            if item[0] == word:\n                item[1] += 1\n                found = True",
          "timestamp": "2024-10-26 14:03:00",
          "snapshot_id": 24,
          "grade": ""
        },
        {
          "student_id": 109,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        counts[word] += 1",
          "timestamp": "2024-10-26 14:03:00",
          "snapshot_id": 25,
          "grade": ""
        },
        {
          "student_id": 80,
          "content": "def word_count(text):\n    # add comments\n    # convert to lowercase\n    text = text.lower()\n    # remove punctuation\n    text = text.replace('.', '')\n    text = text.replace(',', '')\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:01",
          "snapshot_id": 37,
          "grade": ""
        },
        {
          "student_id": 84,
          "content": "def count_words(txt):\n    # this is done\n    words = txt.split()\n    result = {}\n    for word in words:\n      result[word] = result.get(word, 0) + 1\n    return result",
          "timestamp": "2024-10-26 14:03:05",
          "snapshot_id": 38,
          "grade": ""
        },
        {
          "student_id": 85,
          "content": "def count_words(text):\n    # changed var name\n    words = text.split()\n    result = {}\n    for word in words:\n      result[word] = result.get(word, 0) + 1\n    return result",
          "timestamp": "2024-10-26 14:03:10",
          "snapshot_id": 39,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    # step 1: split string into words\n    words = text.split()\n    # step 2: create a dictionary to store counts\n    counts = {}\n    # step 3: loop through words and count them\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:15",
          "snapshot_id": 38,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n  cleaned_str = \"\"\n  for char in text.lower():\n    if char.isalpha() or char.isspace():\n      cleaned_str += char\n    else:\n      cleaned_str += ' '\n  \n  words = cleaned_str.split()\n  counts = {}",
          "timestamp": "2024-10-26 14:03:15",
          "snapshot_id": 63,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_counter(text):\n    word_list = text.split()\n    the_dict = {}\n    for w in word_list:\n        if w in the_dict:\n            the_dict[w] = the_dict[w] + 1\n        else:\n            the_dict[w] = 1\n    return the_dict",
          "timestamp": "2024-10-26 14:03:15",
          "snapshot_id": 116,
          "grade": ""
        },
        {
          "student_id": 76,
          "content": "def word_count(text):\n    # and punctuation\n    processed_text = text.lower()\n    words = processed_text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:15",
          "snapshot_id": 131,
          "grade": ""
        },
        {
          "student_id": 77,
          "content": "def word_count(text):\n  lower_text = text.lower()\n  words = lower_text.split()\n  # step 3: count\n  counts = {}\n  for word in words:\n    if word not in counts:\n      counts[word] = 1\n    else:\n      counts[word] += 1",
          "timestamp": "2024-10-26 14:03:15",
          "snapshot_id": 145,
          "grade": ""
        },
        {
          "student_id": 79,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words\n        # loop",
          "timestamp": "2024-10-26 14:03:15",
          "snapshot_id": 180,
          "grade": ""
        },
        {
          "student_id": 81,
          "content": "def word_count(text):\n    text = text.lower()\n    text = text.replace('.', '')\n    text = text.replace(',', '')\n    text = text.replace('!', '')\n    text = text.replace('?', '')\n    words = text.split()\n    word_counts = {}\n    for w in words:\n        if w:\n            if w in word_counts:\n                word_counts[w] += 1\n            else:\n                word_counts[w] = 1\n    return word_counts",
          "timestamp": "2024-10-26 14:03:15",
          "snapshot_id": 40,
          "grade": ""
        },
        {
          "student_id": 102,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:15",
          "snapshot_id": 26,
          "grade": ""
        },
        {
          "student_id": 103,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] = counts[word] + 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:15",
          "snapshot_id": 27,
          "grade": ""
        },
        {
          "student_id": 105,
          "content": "def word_count(text):\n    text = text.lower()\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:15",
          "snapshot_id": 28,
          "grade": ""
        },
        {
          "student_id": 88,
          "content": "def word_count(text):\n  # maybe I should return a list of tuples?\n  counts = {}\n  for word in text.split(' '):\n    counts[word] = len(word)\n  return counts",
          "timestamp": "2024-10-26 14:03:20",
          "snapshot_id": 41,
          "grade": ""
        },
        {
          "student_id": 89,
          "content": "def word_count(text):\n    # this doesn't work for multiple spaces\n    counts = {}\n    for word in text.split():\n        if word not in counts:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:25",
          "snapshot_id": 42,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:\n            word_counts[word] += 1\n        else:\n            word_counts[word] = 1",
          "timestamp": "2024-10-26 14:03:30",
          "snapshot_id": 10,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    clean_text = text.lower()\n    punctuation = '.,!?'\n    for p in punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    \n    words = clean_text.split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1",
          "timestamp": "2024-10-26 14:03:30",
          "snapshot_id": 83,
          "grade": ""
        },
        {
          "student_id": 82,
          "content": "def word_count(text):\n    text = text.lower()\n    punctuation = '.,!?'\n    for p in punctuation:\n        text = text.replace(p, ' ')\n\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        word_counts[word] = word_counts.get(word, 0) + 1\n    return word_counts",
          "timestamp": "2024-10-26 14:03:30",
          "snapshot_id": 43,
          "grade": ""
        },
        {
          "student_id": 101,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:30",
          "snapshot_id": 29,
          "grade": ""
        },
        {
          "student_id": 110,
          "content": "def word_count(text):\n    pass",
          "timestamp": "2024-10-26 14:03:30",
          "snapshot_id": 30,
          "grade": ""
        },
        {
          "student_id": 80,
          "content": "def word_count(text):\n    # what if there are other punctuations like ';'\n    text = text.lower()\n    text = text.replace('.', '')\n    text = text.replace(',', '')\n    text = text.replace(';', '') # added semicolon\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word: # handle empty strings from multiple spaces\n            if word in counts:\n                counts[word] += 1\n            else:\n                counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:33",
          "snapshot_id": 44,
          "grade": ""
        },
        {
          "student_id": 86,
          "content": "def word_counter(text):\n  # what about other punctuation?\n  text = text.lower()\n  text = text.replace('.', '')\n  text = text.replace(',', '') # forgot comma\n  words = text.split()\n  counts = {}\n  for w in words:\n      counts[w] = counts.get(w, 0) + 1\n  return counts",
          "timestamp": "2024-10-26 14:03:40",
          "snapshot_id": 45,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "def word_count(text):\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:\n            word_counts[word] += 1\n        else:\n            word_counts[word] = 1\n    return word_counts",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 11,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n  cleaned_str = \"\"\n  for char in text.lower():\n    if char.isalpha() or char.isspace():\n      cleaned_str += char\n    else:\n      cleaned_str += ' '\n  \n  words = cleaned_str.split()\n  counts = {}\n  for word in words:",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 64,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    clean_text = text.lower()\n    punctuation = '.,!?'\n    for p in punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    \n    words = clean_text.split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n        \n    return counts",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 84,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    # test with 'hello world hello'\n    # words = ['hello', 'world', 'hello']\n    # counts = {'hello': 2, 'world': 1}\n    # looks correct\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 100,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_count(text):\n    word_list = text.split()\n    the_dict = {}\n    for w in word_list:\n        if w in the_dict:\n            the_dict[w] = the_dict[w] + 1\n        else:\n            the_dict[w] = 1\n    return the_dict",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 117,
          "grade": ""
        },
        {
          "student_id": 76,
          "content": "def word_count(text):\n    # and punctuation\n    processed_text = text.lower()\n    processed_text = processed_text.replace('.', '')\n    words = processed_text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 132,
          "grade": ""
        },
        {
          "student_id": 77,
          "content": "def word_count(text):\n  lower_text = text.lower()\n  words = lower_text.split()\n  counts = {}\n  for word in words:\n    if word not in counts:\n      counts[word] = 1\n    else:\n      counts[word] += 1\n  return counts",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 146,
          "grade": ""
        },
        {
          "student_id": 78,
          "content": "# wait, the question says count WORDS, not characters. oops.\n\ndef count_chars(text):\n    char_counts = {}\n    for char in text:\n        if char in char_counts:\n            char_counts[char] += 1\n        else:\n            char_counts[char] = 1\n    return char_counts",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 161,
          "grade": ""
        },
        {
          "student_id": 79,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words: # added colon\n        counts[word] = counts[word] + 1",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 181,
          "grade": ""
        },
        {
          "student_id": 81,
          "content": "def word_count(text):\n    \"\"\"Docstring for my function.\"\"\"\n    text = text.lower()\n    text = text.replace('.', '')\n    text = text.replace(',', '')\n    text = text.replace('!', '')\n    text = text.replace('?', '')\n    words = text.split()\n    word_counts = {}\n    for w in words:\n        if w:\n            word_counts[w] = word_counts.get(w, 0) + 1\n    return word_counts",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 46,
          "grade": ""
        },
        {
          "student_id": 104,
          "content": "# this is simple enough",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 31,
          "grade": ""
        },
        {
          "student_id": 107,
          "content": "def word_count(text):\n    words = text.split()\n    counts = []\n    for word in words:\n        found = False\n        for item in counts:\n            if item[0] == word:\n                item[1] += 1\n                found = True\n        if not found:\n            counts.append([word, 1])",
          "timestamp": "2024-10-26 14:03:45",
          "snapshot_id": 32,
          "grade": ""
        },
        {
          "student_id": 83,
          "content": "def word_count(text):\n    \"\"\"This is a function to count words\"\"\"\n    text = text.lower()\n    punctuation = '.,!?'\n    for p in punctuation:\n        text = text.replace(p, ' ')\n\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        word_counts[word] = word_counts.get(word, 0) + 1\n    return word_counts",
          "timestamp": "2024-10-26 14:03:50",
          "snapshot_id": 47,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    # This works for simple text. But not for 'Word' and 'word'\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:04:00",
          "snapshot_id": 39,
          "grade": ""
        },
        {
          "student_id": 84,
          "content": "def count_words(text):\n    # adding a docstring\n    \"\"\"Counts words in a text string.\"\"\"\n    words = text.split()\n    result = {}\n    for word in words:\n      result[word] = result.get(word, 0) + 1\n    return result",
          "timestamp": "2024-10-26 14:04:00",
          "snapshot_id": 48,
          "grade": ""
        },
        {
          "student_id": 108,
          "content": "def count_chars(text):\n    counts = {}\n    for char in text:\n        if char != ' ':\n            if char in counts:\n                counts[char] += 1\n            else:\n                counts[char] = 1\n    return counts",
          "timestamp": "2024-10-26 14:04:00",
          "snapshot_id": 33,
          "grade": ""
        },
        {
          "student_id": 109,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        counts[word] += 1\n    return counts",
          "timestamp": "2024-10-26 14:04:00",
          "snapshot_id": 34,
          "grade": ""
        },
        {
          "student_id": 88,
          "content": "def word_count(text):\n  word_lengths = {}\n  for word in text.split():\n    word_lengths[word] = len(word)\n  return word_lengths",
          "timestamp": "2024-10-26 14:04:10",
          "snapshot_id": 49,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n  cleaned_str = \"\"\n  for char in text.lower():\n    if char.isalpha() or char.isspace():\n      cleaned_str += char\n    else:\n      cleaned_str += ' '\n  \n  words = cleaned_str.split()\n  counts = {}\n  for word in words:\n    counts[word] = counts.get(word, 0) + 1",
          "timestamp": "2024-10-26 14:04:15",
          "snapshot_id": 65,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    # looks correct\n    words_list = text.split()\n    counts_dict = {}\n    for word in words_list:\n        if word in counts_dict:\n            counts_dict[word] += 1\n        else:\n            counts_dict[word] = 1\n    return counts_dict",
          "timestamp": "2024-10-26 14:04:15",
          "snapshot_id": 101,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_count(text):\n    # This function takes text and counts the words\n    word_list = text.split()\n    result_dict = {}\n    for w in word_list:\n        if w in result_dict:\n            result_dict[w] = result_dict[w] + 1\n        else:\n            result_dict[w] = 1\n    return result_dict",
          "timestamp": "2024-10-26 14:04:15",
          "snapshot_id": 118,
          "grade": ""
        },
        {
          "student_id": 76,
          "content": "def word_count(text):\n    # and punctuation\n    processed_text = text.lower()\n    processed_text = processed_text.replace('.', '')\n    processed_text = processed_text.replace(',', '')\n    words = processed_text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:04:15",
          "snapshot_id": 133,
          "grade": ""
        },
        {
          "student_id": 78,
          "content": "# wait, the question says count WORDS, not characters. oops.\n\ndef word_count(text):\n    pass",
          "timestamp": "2024-10-26 14:04:15",
          "snapshot_id": 162,
          "grade": ""
        },
        {
          "student_id": 85,
          "content": "def count_words(text):\n    # add comments\n    # split string into a list of words\n    words = text.split()\n    # create empty dictionary\n    result = {}\n    # loop over words\n    for word in words:\n      result[word] = result.get(word, 0) + 1\n    return result",
          "timestamp": "2024-10-26 14:04:15",
          "snapshot_id": 50,
          "grade": ""
        },
        {
          "student_id": 102,
          "content": "def word_count(text):\n    # This should be correct. 'Hello' and 'hello' are different though...\n    text = text.lower()\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:04:15",
          "snapshot_id": 35,
          "grade": ""
        },
        {
          "student_id": 106,
          "content": "def word_count(text):\n    text = text.lower()\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:04:15",
          "snapshot_id": 36,
          "grade": ""
        },
        {
          "student_id": 89,
          "content": "def word_count(text):\n    counts = {}\n    word_list = text.split()\n    for word in word_list:\n        if word not in counts:\n            counts[word] = 1\n        else:\n            # what do I do here?\n            pass\n    return counts",
          "timestamp": "2024-10-26 14:04:20",
          "snapshot_id": 51,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "# what about capital letters? Hello and hello should be the same\ndef word_count(text):\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:\n            word_counts[word] += 1\n        else:\n            word_counts[word] = 1\n    return word_counts",
          "timestamp": "2024-10-26 14:04:30",
          "snapshot_id": 12,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    # Need to handle case-insensitivity.\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:04:30",
          "snapshot_id": 40,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n  cleaned_str = \"\"\n  for char in text.lower():\n    if char.isalpha() or char.isspace():\n      cleaned_str += char\n    else:\n      cleaned_str += ' '\n  \n  words = cleaned_str.split()\n  counts = {}\n  for word in words:\n    counts[word] = counts.get(word, 0) + 1\n  return counts",
          "timestamp": "2024-10-26 14:04:30",
          "snapshot_id": 66,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    # add more punctuation\n    punctuation = '.,!?;:\"\\''\n    clean_text = text.lower()\n    for p in punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    \n    words = clean_text.split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n        \n    return counts",
          "timestamp": "2024-10-26 14:04:30",
          "snapshot_id": 85,
          "grade": ""
        },
        {
          "student_id": 77,
          "content": "def word_count(text):\n  # this doesn't handle punctuation 'word.'\n  lower_text = text.lower()\n  words = lower_text.split()\n  counts = {}\n  for word in words:\n    if word not in counts:\n      counts[word] = 1\n    else:\n      counts[word] += 1\n  return counts",
          "timestamp": "2024-10-26 14:04:30",
          "snapshot_id": 147,
          "grade": ""
        },
        {
          "student_id": 79,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        # this will give a key error if the word is new\n        counts[word] = counts[word] + 1",
          "timestamp": "2024-10-26 14:04:30",
          "snapshot_id": 182,
          "grade": ""
        },
        {
          "student_id": 83,
          "content": "def word_count(text):\n    \"\"\"This is a function to count words. It handles case and some punctuation.\"\"\"\n    text = text.lower()\n    punctuation = '.,!?;:'\n    for p in punctuation:\n        text = text.replace(p, ' ')\n\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        word_counts[word] = word_counts.get(word, 0) + 1\n    return word_counts",
          "timestamp": "2024-10-26 14:04:30",
          "snapshot_id": 52,
          "grade": ""
        },
        {
          "student_id": 101,
          "content": "def word_count(text):\n  # thinking about edge cases\n  words = text.split()\n  counts = {}\n  for word in words:\n    if word in counts:\n      counts[word] += 1\n    else:\n      counts[word] = 1\n  return counts",
          "timestamp": "2024-10-26 14:04:30",
          "snapshot_id": 37,
          "grade": ""
        },
        {
          "student_id": 103,
          "content": "# this seems good.",
          "timestamp": "2024-10-26 14:04:30",
          "snapshot_id": 38,
          "grade": ""
        },
        {
          "student_id": 110,
          "content": "def word_count(text):\n    pass",
          "timestamp": "2024-10-26 14:04:30",
          "snapshot_id": 39,
          "grade": ""
        },
        {
          "student_id": 82,
          "content": "def word_count(text):\n    \"\"\"This is a function to count words. It handles case and some punctuation.\"\"\"\n    text = text.lower()\n    punctuation = '.,!?;:'\n    for p in punctuation:\n        text = text.replace(p, '') # replacing with empty is better\n\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word: # check for empty strings\n            word_counts[word] = word_counts.get(word, 0) + 1\n    return word_counts",
          "timestamp": "2024-10-26 14:04:40",
          "snapshot_id": 53,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "# what about capital letters? Hello and hello should be the same\ndef word_count(text):\n    text = text.lower()\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:\n            word_counts[word] += 1\n        else:\n            word_counts[word] = 1\n    return word_counts",
          "timestamp": "2024-10-26 14:04:45",
          "snapshot_id": 13,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    \"\"\"This function counts words in a text\"\"\"\n    words_list = text.split()\n    counts_dict = {}\n    for word in words_list:\n        if word in counts_dict:\n            counts_dict[word] += 1\n        else:\n            counts_dict[word] = 1\n    return counts_dict",
          "timestamp": "2024-10-26 14:04:45",
          "snapshot_id": 102,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_count(text):\n    # This function takes text and counts the words\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] = counts[word] + 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:04:45",
          "snapshot_id": 119,
          "grade": ""
        },
        {
          "student_id": 78,
          "content": "def word_count(text):\n    words = text.split()",
          "timestamp": "2024-10-26 14:04:45",
          "snapshot_id": 163,
          "grade": ""
        },
        {
          "student_id": 87,
          "content": "def word_counter(text):\n  # final check\n  text = text.lower()\n  text = text.replace('.', '')\n  text = text.replace(',', '') \n  # misses other punctuation\n  words = text.split()\n  counts = {}\n  for w in words:\n      if w:\n        counts[w] = counts.get(w, 0) + 1\n  return counts",
          "timestamp": "2024-10-26 14:04:45",
          "snapshot_id": 54,
          "grade": ""
        },
        {
          "student_id": 102,
          "content": "def word_count(text):\n    # what about punctuation?",
          "timestamp": "2024-10-26 14:04:45",
          "snapshot_id": 40,
          "grade": ""
        },
        {
          "student_id": 107,
          "content": "def word_count(text):\n    words = text.split()\n    counts = []\n    for word in words:\n        found = False\n        for item in counts:\n            if item[0] == word:\n                item[1] += 1\n                found = True\n                break\n        if not found:\n            counts.append([word, 1])\n    return counts",
          "timestamp": "2024-10-26 14:04:45",
          "snapshot_id": 41,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    # Need to handle case-insensitivity.\n    # Also punctuation. 'word.' is not 'word'\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:00",
          "snapshot_id": 41,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n    \"\"\"Efficiently counts words by pre-cleaning the string.\"\"\"\n    cleaned_str = \"\"\n    for char in text.lower():\n        if char.isalpha() or char.isspace():\n            cleaned_str += char\n        else:\n            cleaned_str += ' '\n    \n    words = cleaned_str.split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
          "timestamp": "2024-10-26 14:05:00",
          "snapshot_id": 67,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    \"\"\"A concise word counter.\"\"\"\n    # add more punctuation\n    punctuation = '.,!?;:\"\\''\n    clean_text = text.lower()\n    for p in punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    \n    words = clean_text.split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n        \n    return counts",
          "timestamp": "2024-10-26 14:05:00",
          "snapshot_id": 86,
          "grade": ""
        },
        {
          "student_id": 76,
          "content": "def word_count(text):\n    # and punctuation\n    processed_text = text.lower()\n    # what about 'end.Start'? becomes 'endstart'\n    processed_text = processed_text.replace('.', '')\n    processed_text = processed_text.replace(',', '')\n    words = processed_text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:00",
          "snapshot_id": 134,
          "grade": ""
        },
        {
          "student_id": 77,
          "content": "def word_count(text):\n  lower_text = text.lower()\n  clean_text = lower_text.replace('.', '')\n  words = clean_text.split()\n  counts = {}\n  for word in words:\n    if word not in counts:\n      counts[word] = 1\n    else:\n      counts[word] += 1\n  return counts",
          "timestamp": "2024-10-26 14:05:00",
          "snapshot_id": 148,
          "grade": ""
        },
        {
          "student_id": 79,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n          counts[word] = counts[word] + 1\n        else:\n          counts[word] = 1",
          "timestamp": "2024-10-26 14:05:00",
          "snapshot_id": 183,
          "grade": ""
        },
        {
          "student_id": 80,
          "content": "def word_count(text):\n    \"\"\"Counts the occurrences of each word in a given text.\"\"\"\n    processed_text = text.lower()\n    punctuation_to_remove = '.,!?;:'\n    for char in punctuation_to_remove:\n        processed_text = processed_text.replace(char, '')\n    \n    words = processed_text.split()\n    \n    counts = {}\n    for word in words:\n        if word: \n            if word in counts:\n                counts[word] += 1\n            else:\n                counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:00",
          "snapshot_id": 55,
          "grade": ""
        },
        {
          "student_id": 101,
          "content": "def word_count(text):\n    text = text.lower()\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:00",
          "snapshot_id": 42,
          "grade": ""
        },
        {
          "student_id": 104,
          "content": "# I think this is done.",
          "timestamp": "2024-10-26 14:05:00",
          "snapshot_id": 43,
          "grade": ""
        },
        {
          "student_id": 105,
          "content": "def word_count(text):\n    # I'll just handle lower case. that's probably enough\n    text = text.lower()\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:00",
          "snapshot_id": 44,
          "grade": ""
        },
        {
          "student_id": 89,
          "content": "def word_count(text):\n    counts = {}\n    word_list = text.split()\n    for word in word_list:\n      # I am stuck\n      counts[word] = 1 # this just sets it to 1 every time\n    return counts",
          "timestamp": "2024-10-26 14:05:10",
          "snapshot_id": 56,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    \"\"\"This function counts words in a text\"\"\"\n    words_list = text.split()\n    counts_dict = {}\n\n    for word in words_list:\n        if word in counts_dict:\n            counts_dict[word] += 1\n        else:\n            counts_dict[word] = 1\n            \n    return counts_dict",
          "timestamp": "2024-10-26 14:05:15",
          "snapshot_id": 103,
          "grade": ""
        },
        {
          "student_id": 78,
          "content": "def word_count(text):\n    words = text.split()\n    # i need to store the counts\n    counts_list = []",
          "timestamp": "2024-10-26 14:05:15",
          "snapshot_id": 164,
          "grade": ""
        },
        {
          "student_id": 88,
          "content": "def word_count(text):\n    \"\"\"Takes text and returns a dictionary of word counts.\"\"\"\n    word_lengths = {}\n    # is this right?\n    for word in text.split():\n        if word:\n            word_lengths[word] = len(word)\n    return word_lengths",
          "timestamp": "2024-10-26 14:05:15",
          "snapshot_id": 57,
          "grade": ""
        },
        {
          "student_id": 108,
          "content": "def count_words(text):\n    # wait, it's word count not char count\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:15",
          "snapshot_id": 45,
          "grade": ""
        },
        {
          "student_id": 109,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word not in counts:\n            counts[word] = 0\n        counts[word] += 1\n    return counts",
          "timestamp": "2024-10-26 14:05:15",
          "snapshot_id": 46,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "# what about capital letters? Hello and hello should be the same\n# what about punctuation? like hello.\ndef word_count(text):\n    text = text.lower()\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:\n            word_counts[word] += 1\n        else:\n            word_counts[word] = 1\n    return word_counts",
          "timestamp": "2024-10-26 14:05:30",
          "snapshot_id": 14,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    # Let's clean the text first.\n    clean_text = text.lower()\n    words = clean_text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:30",
          "snapshot_id": 42,
          "grade": ""
        },
        {
          "student_id": 73,
          "content": "def word_count(text):\n    \"\"\"A concise word counter.\"\"\"\n    if not isinstance(text, str):\n        return {}\n\n    punctuation = '.,!?;:\"\\''\n    clean_text = text.lower()\n    for p in punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    \n    words = clean_text.split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n        \n    return counts",
          "timestamp": "2024-10-26 14:05:30",
          "snapshot_id": 87,
          "grade": ""
        },
        {
          "student_id": 75,
          "content": "def word_count(text):\n    # This function takes text and counts the words\n    words = text.split()\n    counts = {}\n    for word in words:\n        # check if word is already a key\n        if word in counts:\n            counts[word] = counts[word] + 1\n        else:\n            # if not, add it\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:30",
          "snapshot_id": 120,
          "grade": ""
        },
        {
          "student_id": 76,
          "content": "def word_count(text):\n    # use space instead\n    processed_text = text.lower()\n    processed_text = processed_text.replace('.', ' ')\n    processed_text = processed_text.replace(',', ' ')\n    words = processed_text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:30",
          "snapshot_id": 135,
          "grade": ""
        },
        {
          "student_id": 84,
          "content": "def count_words(text):\n    \"\"\"Counts words in a text string. Ignores case and punctuation.\"\"\"\n    # wait, prompt says ignore case and punctuation. My code doesn't do that.\n    words = text.split()\n    result = {}\n    for word in words:\n      result[word] = result.get(word, 0) + 1\n    return result",
          "timestamp": "2024-10-26 14:05:30",
          "snapshot_id": 58,
          "grade": ""
        },
        {
          "student_id": 101,
          "content": "def word_count(text):\n    text = text.lower()\n    # what about punctuation like 'word.'\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:30",
          "snapshot_id": 47,
          "grade": ""
        },
        {
          "student_id": 110,
          "content": "def word_count(text):\n    words = text.split()\n    # this is too hard",
          "timestamp": "2024-10-26 14:05:30",
          "snapshot_id": 48,
          "grade": ""
        },
        {
          "student_id": 72,
          "content": "def word_count(text):\n    \"\"\"Efficiently counts words by pre-cleaning the string.\"\"\"\n    # what if input is not a string\n    if not isinstance(text, str):\n        return {}\n\n    cleaned_str = \"\"\n    for char in text.lower():\n        if char.isalpha() or char.isspace():\n            cleaned_str += char\n        else:\n            cleaned_str += ' '\n    \n    words = cleaned_str.split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
          "timestamp": "2024-10-26 14:05:45",
          "snapshot_id": 68,
          "grade": ""
        },
        {
          "student_id": 77,
          "content": "def word_count(text):\n  lower_text = text.lower()\n  clean_text = lower_text.replace('.', '')\n  clean_text = clean_text.replace('!', '')\n  clean_text = clean_text.replace('?', '')\n  words = clean_text.split()\n  counts = {}\n  for word in words:\n    if word not in counts:\n      counts[word] = 1\n    else:\n      counts[word] += 1\n  return counts",
          "timestamp": "2024-10-26 14:05:45",
          "snapshot_id": 149,
          "grade": ""
        },
        {
          "student_id": 79,
          "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words\n        if word in counts:\n          counts[word] = counts[word] + 1\n        else\n          counts[word] = 1",
          "timestamp": "2024-10-26 14:05:45",
          "snapshot_id": 184,
          "grade": ""
        },
        {
          "student_id": 102,
          "content": "def word_count(text):\n    text = text.lower()\n    text = text.replace('.', '')\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:05:45",
          "snapshot_id": 49,
          "grade": ""
        },
        {
          "student_id": 103,
          "content": "# I will submit this now.",
          "timestamp": "2024-10-26 14:05:45",
          "snapshot_id": 50,
          "grade": ""
        },
        {
          "student_id": 106,
          "content": "def word_count(text):\n    text = text.lower()\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts  # My solution is good.",
          "timestamp": "2024-10-26 14:05:45",
          "snapshot_id": 51,
          "grade": ""
        },
        {
          "student_id": 87,
          "content": "def count_words(text):\n    \"\"\"Counts words in a text string.\"\"\"\n    # I should handle lower case\n    words = text.lower().split()\n    result = {}\n    for word in words:\n      result[word] = result.get(word, 0) + 1\n    return result",
          "timestamp": "2024-10-26 14:05:50",
          "snapshot_id": 59,
          "grade": ""
        },
        {
          "student_id": 70,
          "content": "# what about capital letters? Hello and hello should be the same\n# what about punctuation? like hello.\ndef word_count(text):\n    text = text.lower()\n    text = text.replace('.', '')\n    words = text.split()\n    word_counts = {}\n    for word in words:\n        if word in word_counts:\n            word_counts[word] += 1\n        else:\n            word_counts[word] = 1\n    return word_counts",
          "timestamp": "2024-10-26 14:06:00",
          "snapshot_id": 15,
          "grade": ""
        },
        {
          "student_id": 71,
          "content": "def word_count(text):\n    # Let's clean the text first.\n    clean_text = text.lower()\n    clean_text = clean_text.replace('.', '')\n    words = clean_text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:06:00",
          "snapshot_id": 43,
          "grade": ""
        },
        {
          "student_id": 74,
          "content": "def word_count(text):\n    \"\"\"This function counts words in a text.\"\"\"\n    # Takes a string and returns a dictionary of word counts.\n\n    words_list = text.split()\n    counts_dict = {}\n\n    for word in words_list:\n        if word in counts_dict:\n            counts_dict[word] += 1\n        else:\n            counts_dict[word] = 1\n            \n    return counts_dict",
          "timestamp": "2024-10-26 14:06:00",
          "snapshot_id": 104,
          "grade": ""
        },
        {
          "student_id": 78,
          "content": "def word_count(text):\n    words = text.split()\n    counts_list = []\n    for word in words:\n        # how many times is this word in the list?\n        count = words.count(word)",
          "timestamp": "2024-10-26 14:06:00",
          "snapshot_id": 165,
          "grade": ""
        },
        {
          "student_id": 81,
          "content": "def word_count(text):\n    \"\"\"Takes text and returns a dictionary of word counts.\"\"\"\n    # final clean up\n    clean_text = text.lower()\n    punctuation = '.,!?;:\"' # added quotes\n    for p in punctuation:\n        clean_text = clean_text.replace(p, '')\n\n    words = clean_text.split()\n    word_counts = {}\n    for word in words:\n        if word:\n            word_counts[word] = word_counts.get(word, 0) + 1\n    return word_counts",
          "timestamp": "2024-10-26 14:06:00",
          "snapshot_id": 60,
          "grade": ""
        },
        {
          "student_id": 101,
          "content": "def word_count(text):\n    text = text.lower()\n    text = text.replace(',', ' ')\n    text = text.replace('.', ' ')\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
          "timestamp": "2024-10-26 14:06:00",
          "snapshot_id": 52,
          "grade": ""
        },
        {
          "student_id": 107,
          "content": "def word_count(text):\n    words = text.lower().split()\n    counts = []\n    for word in words:\n        found = False\n        for item in counts:\n            if item[0] == word:\n                item[1] += 1\n                found = True\n                break\n        if not found:\n            counts.append([word, 1])\n    return counts",
          "timestamp": "2024-10-26 14:06:00",
          "snapshot_id": 53,
          "grade": ""
        }
      ]
    },
    "submissionTimes": {
    "submission_times": [
      
  ]
  
  },
    "problemDescription": {
    "problem_description": "Write a function that takes a string text and returns a dictionary (or hash map) where the keys are words in the string, and the values are the number of times each word appears.",
    "timestamp": "2024-10-26 14:00:00"
  },
    
  "taInterventions": {
    "interventions": []
  }
}