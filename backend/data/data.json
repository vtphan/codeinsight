{
    "analysisData": {
        "problem_summary": {
            "title": "Word_Count.py"
        },
        "isEnable": true,
        "overall_assessment": {
            "total_entries": 21,
            "performance_distribution": {
                "correct": {
                    "count": 0,
                    "percentage": "0.00%"
                },
                "incorrect": {
                    "count": 0,
                    "percentage": "0.00%"
                },
                "not_assessed": {
                    "count": 21,
                    "percentage": "100.00%"
                }
            }
        },
        "individual_assessment": [
        {
            "student_id": 56,
            "performance_level": "Correct"
        },
        {
            "student_id": 61,
            "performance_level": "Correct"
        },
        {
            "student_id": 68,
            "performance_level": "Incorrect"
        },
        {
            "student_id": 70,
            "performance_level": "Incorrect"
        },
        {
            "student_id": 78,
            "performance_level": "Incorrect"
        },
        {
            "student_id": 82,
            "performance_level": "Incorrect"
        },
        {
            "student_id": 85,
            "performance_level": "Incorrect"
        },
        {
            "student_id": 86,
            "performance_level": "Correct"
        },
        {
            "student_id": 87,
            "performance_level": "Correct"
        },
        {
            "student_id": 89,
            "performance_level": "Correct"
        },
        {
            "student_id": 90,
            "performance_level": "Correct"
        },
        {
            "student_id": 91,
            "performance_level": "Correct"
        },
        {
            "student_id": 92,
            "performance_level": "Correct"
        },
        {
            "student_id": 96,
            "performance_level": "Incorrect"
        },
        {
            "student_id": 97,
            "performance_level": "Incorrect"
        },
        {
            "student_id": 98,
            "performance_level": "NotAssessed"
        },
        {
            "student_id": 100,
            "performance_level": "Incorrect"
        },
        {
            "student_id": 102,
            "performance_level": "NotAssessed"
        },
        {
            "student_id": 105,
            "performance_level": "Incorrect"
        },
        {
            "student_id": 107,
            "performance_level": "Incorrect"
        },
        {
            "student_id": 110,
            "performance_level": "NotAssessed"
        }
    ],
        "aggregate_analysis": {
            "top_errors": [],
            "error_correlations": [],
            "potential_misconceptions": []
        }
    },
  
    "problemDescription": {
        "timestamp": "2025-06-10 15:30:00",
        "problem_description": "Word Count: Write a function `word_count(text)` that takes a string and returns a dictionary where the keys are words and the values are the number of times each word appears in the string. Ignore punctuation and case sensitivity."
    },
    "codeSnapshots": {
          "entries": [
            {
              "content": "def word_count(text):\n    pass",
              "grade": "",
              "snapshot_id": 1,
              "student_id": 61,
              "timestamp": "2025-06-10 15:30:39"
            },
            {
              "content": "def word_count(text):\n    # return a map of word -> count",
              "grade": "",
              "snapshot_id": 2,
              "student_id": 82,
              "timestamp": "2025-06-10 15:30:45"
            },
            {
              "content": "def word_count(text):\n    pass",
              "grade": "",
              "snapshot_id": 3,
              "student_id": 68,
              "timestamp": "2025-06-10 15:30:51"
            },
            {
              "content": "def word_count(s):\n    # Count words in string s",
              "grade": "",
              "snapshot_id": 4,
              "student_id": 56,
              "timestamp": "2025-06-10 15:31:05"
            },
            {
              "content": "def word_count(text):\n    counts = {}",
              "grade": "",
              "snapshot_id": 5,
              "student_id": 78,
              "timestamp": "2025-06-10 15:31:12"
            },
            {
              "content": "def word_count(text):\n    words = text.split()",
              "grade": "",
              "snapshot_id": 6,
              "student_id": 68,
              "timestamp": "2025-06-10 15:31:18"
            },
            {
              "content": "def word_count(text):\n    words = text.split()",
              "grade": "",
              "snapshot_id": 7,
              "student_id": 61,
              "timestamp": "2025-06-10 15:31:24"
            },
            {
              "content": "def count_words(text):",
              "grade": "",
              "snapshot_id": 8,
              "student_id": 85,
              "timestamp": "2025-06-10 15:31:33"
            },
            {
              "content": "def get_word_counts(txt):\n    pass",
              "grade": "",
              "snapshot_id": 9,
              "student_id": 70,
              "timestamp": "2025-06-10 15:31:38"
            },
            {
              "content": "from collections import Counter\n\ndef word_count(s):\n    # Count words in string s",
              "grade": "",
              "snapshot_id": 10,
              "student_id": 56,
              "timestamp": "2025-06-10 15:31:47"
            },
            {
              "content": "def word_count(text):\n    text_lower = text.lower()",
              "grade": "",
              "snapshot_id": 11,
              "student_id": 82,
              "timestamp": "2025-06-10 15:31:50"
            },
            {
              "content": "def word_count(text):\n    counts = {}\n    words = text.split()",
              "grade": "",
              "snapshot_id": 12,
              "student_id": 78,
              "timestamp": "2025-06-10 15:31:52"
            },
            {
              "content": "def word_count(text):\n    words = text.split()\n    counts = {}",
              "grade": "",
              "snapshot_id": 13,
              "student_id": 61,
              "timestamp": "2025-06-10 15:32:01"
            },
            {
              "content": "def word_count(text):\n    words = text.split()\n    result = {}",
              "grade": "",
              "snapshot_id": 14,
              "student_id": 68,
              "timestamp": "2025-06-10 15:32:02"
            },
            {
              "content": "def count_words(text):\n    word_dict = {}",
              "grade": "",
              "snapshot_id": 15,
              "student_id": 85,
              "timestamp": "2025-06-10 15:32:15"
            },
            {
              "content": "def get_word_counts(txt):\n    # need to handle punctuation like commas and periods\n    txt_clean = txt.replace('.', '')",
              "grade": "",
              "snapshot_id": 16,
              "student_id": 70,
              "timestamp": "2025-06-10 15:32:20"
            },
            {
              "content": "def word_count(text):\n    counts = {}\n    words = text.split()\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1",
              "grade": "",
              "snapshot_id": 17,
              "student_id": 78,
              "timestamp": "2025-06-10 15:32:29"
            },
            {
              "content": "def word_count(text):\n    text_lower = text.lower()\n    words = text_lower.split()",
              "grade": "",
              "snapshot_id": 18,
              "student_id": 82,
              "timestamp": "2025-06-10 15:32:31"
            },
            {
              "content": "from collections import Counter\n\ndef word_count(s):\n    words = s.lower().split()",
              "grade": "",
              "snapshot_id": 19,
              "student_id": 56,
              "timestamp": "2025-06-10 15:32:32"
            },
            {
              "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1",
              "grade": "",
              "snapshot_id": 20,
              "student_id": 61,
              "timestamp": "2025-06-10 15:32:38"
            },
            {
              "content": "def word_count(text):\n    words = text.split()\n    result = {}\n    for word in words:\n        result[word] = result.get(word, 0) + 1",
              "grade": "",
              "snapshot_id": 21,
              "student_id": 68,
              "timestamp": "2025-06-10 15:32:41"
            },
            {
              "content": "def word_count(text):\n    text_lower = text.lower()\n    words = text_lower.split()\n    counts = {}",
              "grade": "",
              "snapshot_id": 22,
              "student_id": 82,
              "timestamp": "2025-06-10 15:32:51"
            },
            {
              "content": "def word_count(text):\n    counts = {}\n    words = text.split()\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
              "grade": "",
              "snapshot_id": 23,
              "student_id": 78,
              "timestamp": "2025-06-10 15:33:04"
            },
            {
              "content": "def count_words(text):\n    word_dict = {}\n    for w in text.split():",
              "grade": "",
              "snapshot_id": 24,
              "student_id": 85,
              "timestamp": "2025-06-10 15:33:14"
            },
            {
              "content": "def get_word_counts(txt):\n    txt_clean = txt.replace('.', '').replace(',', '') # this is getting tedious",
              "grade": "",
              "snapshot_id": 25,
              "student_id": 70,
              "timestamp": "2025-06-10 15:33:15"
            },
            {
              "content": "from collections import Counter\n\ndef word_count(s):\n    words = s.lower().split()\n    return Counter(words) # this might be it",
              "grade": "",
              "snapshot_id": 26,
              "student_id": 56,
              "timestamp": "2025-06-10 15:33:20"
            },
            {
              "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
              "grade": "",
              "snapshot_id": 27,
              "student_id": 61,
              "timestamp": "2025-06-10 15:33:28"
            },
            {
              "content": "# whoops, indentation error maybe?\ndef word_count(text):\n    counts = {}\n    words = text.split()\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n        return counts # Moved it in by mistake",
              "grade": "",
              "snapshot_id": 28,
              "student_id": 78,
              "timestamp": "2025-06-10 15:33:41"
            },
            {
              "content": "def word_count(text):\n    # Simple word count function\n    words = text.split()\n    result = {}\n    for word in words:\n        result[word] = result.get(word, 0) + 1\n    return result",
              "grade": "partially_correct_30",
              "snapshot_id": 29,
              "student_id": 68,
              "timestamp": "2025-06-10 15:33:42"
            },
            {
              "content": "def word_count(text):\n    text_lower = text.lower()\n    words = text_lower.split()\n    counts = {}\n    for w in words:\n        if w in counts:\n            counts[w] += 1\n        else:\n            counts[w] = 1",
              "grade": "",
              "snapshot_id": 30,
              "student_id": 82,
              "timestamp": "2025-06-10 15:33:48"
            },
            {
              "content": "def count_words(text):\n    word_dict = {}\n    for w in text.split():\n        # how to check if w is in dict?",
              "grade": "",
              "snapshot_id": 31,
              "student_id": 85,
              "timestamp": "2025-06-10 15:34:03"
            },
            {
              "content": "def get_word_counts(txt):\n    txt_clean = txt.replace('.', '').replace(',', '')\n    words = txt_clean.lower().split()",
              "grade": "",
              "snapshot_id": 32,
              "student_id": 70,
              "timestamp": "2025-06-10 15:34:09"
            },
            {
              "content": "# final answer\ndef word_count(text):\n    counts = {}\n    words = text.split()\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n        return counts",
              "grade": "incorrect",
              "snapshot_id": 33,
              "student_id": 78,
              "timestamp": "2025-06-10 15:34:31"
            },
            {
              "content": "# that doesn't handle case or punctuation\ndef word_count(text):\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
              "grade": "",
              "snapshot_id": 34,
              "student_id": 61,
              "timestamp": "2025-06-10 15:34:32"
            },
            {
              "content": "# wait, punctuation. 'hi.' is not 'hi'\nfrom collections import Counter\nimport re\n\ndef word_count(s):\n    words = s.lower().split()\n    return Counter(words)",
              "grade": "",
              "snapshot_id": 35,
              "student_id": 56,
              "timestamp": "2025-06-10 15:34:39"
            },
            {
              "content": "def count_words(text):\n    word_dict = {}\n    for w in text.split():\n        if w in word_dict:\n            # it's already there, so count is 1?\n            word_dict[w] = 1 # BUG: should be increment",
              "grade": "",
              "snapshot_id": 36,
              "student_id": 85,
              "timestamp": "2025-06-10 15:34:40"
            },
            {
              "content": "def word_count(text):\n    # This should be correct\n    words = text.lower().split()\n    counts = {}\n    for w in words:\n        if w in counts:\n            counts[w] += 1\n        else:\n            counts[w] = 1\n    return counts",
              "grade": "partially_correct_60",
              "snapshot_id": 37,
              "student_id": 82,
              "timestamp": "2025-06-10 15:34:45"
            },
            {
              "content": "# still punctuation... lets use regex\nimport re\n\ndef word_count(text):\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
              "grade": "",
              "snapshot_id": 38,
              "student_id": 61,
              "timestamp": "2025-06-10 15:35:10"
            },
            {
              "content": "def get_word_counts(txt):\n    txt_clean = txt.replace('.', '').replace(',', '')\n    words = txt_clean.lower().split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
              "grade": "",
              "snapshot_id": 39,
              "student_id": 70,
              "timestamp": "2025-06-10 15:35:12"
            },
            {
              "content": "from collections import Counter\nimport re\n\ndef word_count(text):\n    # changed s to text\n    words = re.findall(r'\\w+', text.lower())",
              "grade": "",
              "snapshot_id": 40,
              "student_id": 56,
              "timestamp": "2025-06-10 15:35:36"
            },
            {
              "content": "def count_words(text):\n    word_dict = {}\n    for w in text.split():\n        if w in word_dict:\n            word_dict[w] = 1\n        else:\n            word_dict[w] = 1",
              "grade": "",
              "snapshot_id": 41,
              "student_id": 85,
              "timestamp": "2025-06-10 15:35:42"
            },
            {
              "content": "import re\n\ndef word_count(text):\n    words = re.findall(r'\\w+', text.lower()) # find all word characters\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
              "grade": "",
              "snapshot_id": 42,
              "student_id": 61,
              "timestamp": "2025-06-10 15:35:48"
            },
            {
              "content": "# final check. seems ok for the examples i can think of.\ndef get_word_counts(txt):\n    txt_clean = txt.replace('.', '').replace(',', '')\n    words = txt_clean.lower().split()\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
              "grade": "partially_correct_40",
              "snapshot_id": 43,
              "student_id": 70,
              "timestamp": "2025-06-10 15:35:50"
            },
            {
              "content": "from collections import Counter\nimport re\n\ndef word_count(text):\n    \"\"\"Returns a dict of word frequencies.\"\"\"\n    words = re.findall(r'\\w+', text.lower())\n    return Counter(words)",
              "grade": "correct",
              "snapshot_id": 44,
              "student_id": 56,
              "timestamp": "2025-06-10 15:36:20"
            },
            {
              "content": "import re\n\ndef word_count(text):\n    \"\"\"Counts the frequency of each word in a text.\"\"\"\n    words = re.findall(r'\\w+', text.lower())\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
              "grade": "correct",
              "snapshot_id": 45,
              "student_id": 61,
              "timestamp": "2025-06-10 15:36:31"
            },
            {
              "content": "def count_words(text):\n    # simplified\n    word_dict = {}\n    for w in text.split():\n        word_dict[w] = 1\n    return word_dict",
              "grade": "incorrect",
              "snapshot_id": 46,
              "student_id": 85,
              "timestamp": "2025-06-10 15:36:34"
            },
            {
                "content": "def word_count(text):\n    pass",
                "grade": "",
                "snapshot_id": 1,
                "student_id": 96,
                "timestamp": "2025-06-10 15:30:48"
              },
              {
                "content": "def word_count(s):\n    pass",
                "grade": "",
                "snapshot_id": 2,
                "student_id": 105,
                "timestamp": "2025-06-10 15:30:55"
              },
              {
                "content": "def word_counter(text):\n    # how to remove punctuation?\n    # I'll try replace\n    clean = text.replace('.', '').replace('!', '').replace('?', '')",
                "grade": "",
                "snapshot_id": 3,
                "student_id": 110,
                "timestamp": "2025-06-10 15:31:01"
              },
              {
                "content": "def count(txt):\n    words = txt.split()",
                "grade": "",
                "snapshot_id": 4,
                "student_id": 107,
                "timestamp": "2025-06-10 15:31:18"
              },
              {
                "content": "from collections import Counter\n\ndef get_word_counts(text):\n    pass",
                "grade": "",
                "snapshot_id": 5,
                "student_id": 87,
                "timestamp": "2025-06-10 15:31:25"
              },
              {
                "content": "def count(txt):\n    words = txt.split()\n    d = {}",
                "grade": "",
                "snapshot_id": 6,
                "student_id": 107,
                "timestamp": "2025-06-10 15:31:37"
              },
              {
                "content": "def word_count(text):\n    words = text.split()",
                "grade": "",
                "snapshot_id": 7,
                "student_id": 90,
                "timestamp": "2025-06-10 15:31:40"
              },
              {
                "content": "def word_count(text):\n    pass",
                "grade": "",
                "snapshot_id": 8,
                "student_id": 91,
                "timestamp": "2025-06-10 15:31:44"
              },
              {
                "content": "def word_count(s):\n    s_lower = s.lower()",
                "grade": "",
                "snapshot_id": 9,
                "student_id": 105,
                "timestamp": "2025-06-10 15:31:51"
              },
              {
                "content": "def word_count(text):\n    words = text.split()",
                "grade": "",
                "snapshot_id": 10,
                "student_id": 86,
                "timestamp": "2025-06-10 15:31:59"
              },
              {
                "content": "def word_counter(text):\n    clean = text.replace('.', '').replace('!', '').replace('?', '')\n    words = clean.split()",
                "grade": "",
                "snapshot_id": 11,
                "student_id": 110,
                "timestamp": "2025-06-10 15:32:03"
              },
              {
                "content": "def count_words(text):\n    map = {}",
                "grade": "",
                "snapshot_id": 12,
                "student_id": 98,
                "timestamp": "2025-06-10 15:32:09"
              },
              {
                "content": "def word_count(text):\n    words = text.split()",
                "grade": "",
                "snapshot_id": 13,
                "student_id": 91,
                "timestamp": "2025-06-10 15:32:10"
              },
              {
                "content": "def word_count(text)\n    # missing colon",
                "grade": "",
                "snapshot_id": 14,
                "student_id": 100,
                "timestamp": "2025-06-10 15:32:16"
              },
              {
                "content": "def word_count(text):\n    pass",
                "grade": "",
                "snapshot_id": 15,
                "student_id": 92,
                "timestamp": "2025-06-10 15:32:20"
              },
              {
                "content": "def count_words(text):\n    map = {}\n    words = text.split()",
                "grade": "",
                "snapshot_id": 16,
                "student_id": 98,
                "timestamp": "2025-06-10 15:32:24"
              },
              {
                "content": "def word_count(text):\n    words = text.split()\n    counts = {}",
                "grade": "",
                "snapshot_id": 17,
                "student_id": 90,
                "timestamp": "2025-06-10 15:32:26"
              },
              {
                "content": "from collections import Counter\n\ndef get_word_counts(text):\n    # not sure how to handle punctuation",
                "grade": "",
                "snapshot_id": 18,
                "student_id": 87,
                "timestamp": "2025-06-10 15:32:38"
              },
              {
                "content": "def word_count(s):\n    pass",
                "grade": "",
                "snapshot_id": 19,
                "student_id": 102,
                "timestamp": "2025-06-10 15:32:41"
              },
              {
                "content": "def word_count(text):\n    # prompt wants a list of words, i think",
                "grade": "",
                "snapshot_id": 20,
                "student_id": 96,
                "timestamp": "2025-06-10 15:32:47"
              },
              {
                "content": "def word_count(text):\n    words = text.split()\n    counts = {}",
                "grade": "",
                "snapshot_id": 21,
                "student_id": 86,
                "timestamp": "2025-06-10 15:32:51"
              },
              {
                "content": "def word_counter(text):\n    # I'll just submit this.\n    words = text.split()\n    return words",
                "grade": "incorrect",
                "snapshot_id": 22,
                "student_id": 97,
                "timestamp": "2025-06-10 15:32:58"
              },
              {
                "content": "def word_count(s):\n    s_lower = s.lower()\n    words = s_lower.split()",
                "grade": "",
                "snapshot_id": 23,
                "student_id": 105,
                "timestamp": "2025-06-10 15:33:04"
              },
              {
                "content": "def count(txt):\n    words = txt.split()\n    d = {}\n    for w in words:\n        if w in d:\n            d[w] += 1\n        else:\n            d[w] = 1",
                "grade": "",
                "snapshot_id": 24,
                "student_id": 107,
                "timestamp": "2025-06-10 15:33:09"
              },
              {
                "content": "def word_counter(text):\n    clean = text.replace('.', '').replace('!', '').replace('?', '')\n    words = clean.split()\n    freq = {}",
                "grade": "",
                "snapshot_id": 25,
                "student_id": 110,
                "timestamp": "2025-06-10 15:33:14"
              },
              {
                "content": "def word_count(text)\n    words = text.split()",
                "grade": "",
                "snapshot_id": 26,
                "student_id": 100,
                "timestamp": "2025-06-10 15:33:15"
              },
              {
                "content": "def count_words(text):\n    map = {}\n    words = text.split()\n    for w in words:\n        map[w] += 1 # forgot to check if key exists",
                "grade": "",
                "snapshot_id": 27,
                "student_id": 98,
                "timestamp": "2025-06-10 15:33:23"
              },
              {
                "content": "def word_count(text):\n    words = text.split()\n    counts = {}",
                "grade": "",
                "snapshot_id": 28,
                "student_id": 91,
                "timestamp": "2025-06-10 15:33:24"
              },
              {
                "content": "def word_count(s):\n    s_lower = s.lower()",
                "grade": "",
                "snapshot_id": 29,
                "student_id": 102,
                "timestamp": "2025-06-10 15:33:29"
              },
              {
                "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1",
                "grade": "",
                "snapshot_id": 30,
                "student_id": 86,
                "timestamp": "2025-06-10 15:33:43"
              },
              {
                "content": "from collections import Counter\nimport string\n\ndef get_word_counts(text):\n    clean_text = text.lower()\n    # remove punctuation\n    for p in string.punctuation:\n        clean_text = clean_text.replace(p, ' ')",
                "grade": "",
                "snapshot_id": 31,
                "student_id": 89,
                "timestamp": "2025-06-10 15:33:55"
              },
              {
                "content": "def word_count(text):\n    # prompt wants a list of words, i think",
                "grade": "",
                "snapshot_id": 32,
                "student_id": 97,
                "timestamp": "2025-06-10 15:33:56"
              },
              {
                "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1",
                "grade": "",
                "snapshot_id": 33,
                "student_id": 90,
                "timestamp": "2025-06-10 15:33:58"
              },
              {
                "content": "def word_count(text):\n    # keys are words... values are number of times\n    # oh so i need to count them\n    # but for now just return the words",
                "grade": "",
                "snapshot_id": 34,
                "student_id": 96,
                "timestamp": "2025-06-10 15:34:03"
              },
              {
                "content": "def count(txt):\n    # simple and easy\n    words = txt.split()\n    d = {}\n    for w in words:\n        if w in d:\n            d[w] += 1\n        else:\n            d[w] = 1\n    return d",
                "grade": "partially_correct",
                "snapshot_id": 35,
                "student_id": 107,
                "timestamp": "2025-06-10 15:34:25"
              },
              {
                "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 36,
                "student_id": 86,
                "timestamp": "2025-06-10 15:34:26"
              },
              {
                "content": "def word_count(s):\n    s_lower = s.lower()\n    words = s_lower.split()\n    counts = {}",
                "grade": "",
                "snapshot_id": 37,
                "student_id": 105,
                "timestamp": "2025-06-10 15:34:33"
              },
              {
                "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1",
                "grade": "",
                "snapshot_id": 38,
                "student_id": 91,
                "timestamp": "2025-06-10 15:34:37"
              },
              {
                "content": "def word_count(s):\n    s_lower = s.lower()\n    words = s_lower.split()",
                "grade": "",
                "snapshot_id": 39,
                "student_id": 102,
                "timestamp": "2025-06-10 15:34:40"
              },
              {
                "content": "from collections import Counter\n\ndef get_word_counts(text):\n    # maybe clean the string first\n    clean_text = text.lower()",
                "grade": "",
                "snapshot_id": 40,
                "student_id": 87,
                "timestamp": "2025-06-10 15:34:41"
              },
              {
                "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 41,
                "student_id": 90,
                "timestamp": "2025-06-10 15:34:43"
              },
              {
                "content": "def word_count(text):\n    words = text.split()\n    return words",
                "grade": "",
                "snapshot_id": 42,
                "student_id": 96,
                "timestamp": "2025-06-10 15:34:52"
              },
              {
                "content": "def word_count(text)\n    words = text.split()\n    counts = {}\n    for word in words\n        counts[word] = counts.get(word, 0) + 1",
                "grade": "",
                "snapshot_id": 43,
                "student_id": 100,
                "timestamp": "2025-06-10 15:34:54"
              },
              {
                "content": "def word_counter(text):\n    clean = text.replace('.', '').replace('!', '').replace('?', '')\n    words = clean.split()\n    freq = {}\n    for word in words:\n        freq[word] = freq.get(word, 0) + 1",
                "grade": "",
                "snapshot_id": 44,
                "student_id": 110,
                "timestamp": "2025-06-10 15:35:01"
              },
              {
                "content": "def count_words(text):\n    # Should work?\n    map = {}\n    words = text.split()\n    for w in words:\n        map[w] += 1\n    return map",
                "grade": "incorrect",
                "snapshot_id": 45,
                "student_id": 98,
                "timestamp": "2025-06-10 15:35:05"
              },
              {
                "content": "from collections import Counter\nimport string\n\ndef get_word_counts(text):\n    clean_text = text.lower()\n    for p in string.punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    words = clean_text.split()",
                "grade": "",
                "snapshot_id": 46,
                "student_id": 89,
                "timestamp": "2025-06-10 15:35:09"
              },
              {
                "content": "# wait, this is case-sensitive. need to fix that.\ndef word_count(text):\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 47,
                "student_id": 86,
                "timestamp": "2025-06-10 15:35:14"
              },
              {
                "content": "# wait, this is case-sensitive. need to fix that.\ndef word_count(text):\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 48,
                "student_id": 90,
                "timestamp": "2025-06-10 15:35:36"
              },
              {
                "content": "def word_count(text):\n    words = text.split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 49,
                "student_id": 91,
                "timestamp": "2025-06-10 15:35:46"
              },
              {
                "content": "from collections import Counter\nimport string\n\ndef get_word_counts(text):\n    clean_text = text.lower()\n    # remove punctuation\n    for p in string.punctuation:\n        clean_text = clean_text.replace(p, ' ')",
                "grade": "",
                "snapshot_id": 50,
                "student_id": 92,
                "timestamp": "2025-06-10 15:35:50"
              },
              {
                "content": "def word_count(text) # I don't see the bug\n    words = text.split()\n    counts = {}\n    for word in words\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
                "grade": "incorrect",
                "snapshot_id": 51,
                "student_id": 100,
                "timestamp": "2025-06-10 15:35:52"
              },
              {
                "content": "def word_count(s):\n    s_lower = s.lower()\n    words = s_lower.split()\n    counts = {}\n    for word in words:\n        if word not in counts:\n            counts[word] = 0\n        counts[word] += 1",
                "grade": "",
                "snapshot_id": 52,
                "student_id": 105,
                "timestamp": "2025-06-10 15:35:56"
              },
              {
                "content": "def word_count(s):\n    s_lower = s.lower()\n    words = s_lower.split()\n    counts = {}",
                "grade": "",
                "snapshot_id": 53,
                "student_id": 102,
                "timestamp": "2025-06-10 15:36:00"
              },
              {
                "content": "def word_counter(text):\n    # This seems to work for 'Hello world.'\n    clean = text.replace('.', '').replace('!', '').replace('?', '').replace(',', '')\n    words = clean.split()\n    freq = {}\n    for word in words:\n        freq[word] = freq.get(word, 0) + 1\n    return freq",
                "grade": "partially_correct",
                "snapshot_id": 54,
                "student_id": 110,
                "timestamp": "2025-06-10 15:36:09"
              },
              {
                "content": "# and punctuation... 'hello.' is not 'hello'\n# better to find all words instead of splitting\nimport re\n\ndef word_count(text):\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 55,
                "student_id": 86,
                "timestamp": "2025-06-10 15:36:13"
              },
              {
                "content": "def word_count(text):\n    # I'll just submit this.\n    words = text.split()\n    return words",
                "grade": "incorrect",
                "snapshot_id": 56,
                "student_id": 96,
                "timestamp": "2025-06-10 15:36:20"
              },
              {
                "content": "from collections import Counter\nimport string\n\ndef get_word_counts(text):\n    clean_text = text.lower()\n    for p in string.punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    words = clean_text.split()\n    return Counter(words)",
                "grade": "",
                "snapshot_id": 57,
                "student_id": 89,
                "timestamp": "2025-06-10 15:36:31"
              },
              {
                "content": "from collections import Counter\nimport string\n\ndef get_word_counts(text):\n    clean_text = text.lower()\n    for p in string.punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    words = clean_text.split()",
                "grade": "",
                "snapshot_id": 58,
                "student_id": 92,
                "timestamp": "2025-06-10 15:36:34"
              },
              {
                "content": "from collections import Counter\nimport string\n\ndef get_word_counts(text):\n    clean_text = text.lower()\n    # remove punctuation\n    for p in string.punctuation:\n        clean_text = clean_text.replace(p, ' ')",
                "grade": "",
                "snapshot_id": 59,
                "student_id": 87,
                "timestamp": "2025-06-10 15:36:38"
              },
              {
                "content": "# wait, this is case-sensitive. need to fix that.\ndef word_count(text):\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 60,
                "student_id": 91,
                "timestamp": "2025-06-10 15:36:39"
              },
              {
                "content": "# and punctuation... 'hello.' is not 'hello'\n# better to find all words instead of splitting\nimport re\n\ndef word_count(text):\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 61,
                "student_id": 90,
                "timestamp": "2025-06-10 15:36:40"
              },
              {
                "content": "# final check\ndef word_count(s):\n    \"\"\"Counts words, case-insensitive.\"\"\"\n    s_lower = s.lower()\n    words = s_lower.split()\n    counts = {}\n    for word in words:\n        if word not in counts:\n            counts[word] = 1 # oops, was 0\n        else:\n            counts[word] += 1\n    return counts",
                "grade": "partially_correct",
                "snapshot_id": 62,
                "student_id": 105,
                "timestamp": "2025-06-10 15:36:59"
              },
              {
                "content": "from collections import Counter\nimport string\n\ndef get_word_counts(text):\n    clean_text = text.lower()\n    for p in string.punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    words = clean_text.split()\n    return Counter(words)",
                "grade": "",
                "snapshot_id": 63,
                "student_id": 92,
                "timestamp": "2025-06-10 15:37:09"
              },
              {
                "content": "# hmm the replace with space can create empty strings from double spaces..\n# a better way is regex\nfrom collections import Counter\nimport re\n\ndef get_word_counts(text):\n    words = re.findall(r'\\b\\w+\\b', text.lower())",
                "grade": "",
                "snapshot_id": 64,
                "student_id": 89,
                "timestamp": "2025-06-10 15:37:25"
              },
              {
                "content": "def word_count(s):\n    s_lower = s.lower()\n    words = s_lower.split()\n    counts = {}\n    for word in words:\n        if word not in counts:\n            counts[word] = 0\n        counts[word] += 1",
                "grade": "",
                "snapshot_id": 65,
                "student_id": 102,
                "timestamp": "2025-06-10 15:37:28"
              },
              {
                "content": "from collections import Counter\nimport string\n\ndef get_word_counts(text):\n    clean_text = text.lower()\n    for p in string.punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    words = clean_text.split()",
                "grade": "",
                "snapshot_id": 66,
                "student_id": 87,
                "timestamp": "2025-06-10 15:37:37"
              },
              {
                "content": "import re\n\ndef word_count(text):\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 67,
                "student_id": 86,
                "timestamp": "2025-06-10 15:37:38"
              },
              {
                "content": "import re\n\ndef word_count(text):\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 68,
                "student_id": 90,
                "timestamp": "2025-06-10 15:37:54"
              },
              {
                "content": "# and punctuation... 'hello.' is not 'hello'\n# better to find all words instead of splitting\nimport re\n\ndef word_count(text):\n    words = text.lower().split()\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 69,
                "student_id": 91,
                "timestamp": "2025-06-10 15:38:00"
              },
              {
                "content": "# hmm the replace with space can create empty strings from double spaces..\n# a better way is regex\nfrom collections import Counter\nimport re\n\ndef get_word_counts(text):\n    words = re.findall(r'\\b\\w+\\b', text.lower())",
                "grade": "",
                "snapshot_id": 70,
                "student_id": 92,
                "timestamp": "2025-06-10 15:38:03"
              },
              {
                "content": "from collections import Counter\nimport re\n\ndef get_word_counts(text):\n    \"\"\"Calculates word frequency using regex and Counter.\"\"\"\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    return Counter(words)",
                "grade": "correct",
                "snapshot_id": 71,
                "student_id": 89,
                "timestamp": "2025-06-10 15:38:22"
              },
              {
                "content": "# can make this a bit cleaner with .get()\nimport re\n\ndef word_count(text):\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
                "grade": "",
                "snapshot_id": 72,
                "student_id": 86,
                "timestamp": "2025-06-10 15:38:43"
              },
              {
                "content": "from collections import Counter\nimport string\n\ndef get_word_counts(text):\n    clean_text = text.lower()\n    for p in string.punctuation:\n        clean_text = clean_text.replace(p, ' ')\n    words = clean_text.split()\n    return Counter(words)",
                "grade": "",
                "snapshot_id": 73,
                "student_id": 87,
                "timestamp": "2025-06-10 15:38:52"
              },
              {
                "content": "from collections import Counter\nimport re\n\ndef get_word_counts(text):\n    \"\"\"Calculates word frequency using regex and Counter.\"\"\"\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    return Counter(words)",
                "grade": "correct",
                "snapshot_id": 74,
                "student_id": 92,
                "timestamp": "2025-06-10 15:39:10"
              },
              {
                "content": "# final check\ndef word_count(s):\n    \"\"\"Counts words, case-insensitive.\"\"\"\n    s_lower = s.lower()\n    words = s_lower.split()\n    counts = {}\n    for word in words:\n        if word not in counts:\n            counts[word] = 1 # oops, was 0\n        else:\n            counts[word] += 1\n    return counts",
                "grade": "partially_correct",
                "snapshot_id": 75,
                "student_id": 102,
                "timestamp": "2025-06-10 15:39:15"
              },
              {
                "content": "import re\n\ndef word_count(text):\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return counts",
                "grade": "",
                "snapshot_id": 76,
                "student_id": 91,
                "timestamp": "2025-06-10 15:39:15"
              },
              {
                "content": "# can make this a bit cleaner with .get()\nimport re\n\ndef word_count(text):\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
                "grade": "",
                "snapshot_id": 77,
                "student_id": 90,
                "timestamp": "2025-06-10 15:39:27"
              },
              {
                "content": "# hmm the replace with space can create empty strings from double spaces..\n# a better way is regex\nfrom collections import Counter\nimport re\n\ndef get_word_counts(text):\n    words = re.findall(r'\\b\\w+\\b', text.lower())",
                "grade": "",
                "snapshot_id": 78,
                "student_id": 87,
                "timestamp": "2025-06-10 15:39:30"
              },
              {
                "content": "import re\n\ndef word_count(text):\n    \"\"\"Counts the frequency of each word in a string, ignoring case and punctuation.\"\"\"\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
                "grade": "correct",
                "snapshot_id": 79,
                "student_id": 86,
                "timestamp": "2025-06-10 15:40:02"
              },
              {
                "content": "# can make this a bit cleaner with .get()\nimport re\n\ndef word_count(text):\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
                "grade": "",
                "snapshot_id": 80,
                "student_id": 91,
                "timestamp": "2025-06-10 15:40:27"
              },
              {
                "content": "import re\n\ndef word_count(text):\n    \"\"\"Counts the frequency of each word in a string, ignoring case and punctuation.\"\"\"\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
                "grade": "correct",
                "snapshot_id": 81,
                "student_id": 90,
                "timestamp": "2025-06-10 15:40:29"
              },
              {
                "content": "from collections import Counter\nimport re\n\ndef get_word_counts(text):\n    \"\"\"Calculates word frequency using regex and Counter.\"\"\"\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    return Counter(words)",
                "grade": "correct",
                "snapshot_id": 82,
                "student_id": 87,
                "timestamp": "2025-06-10 15:40:54"
              },
              {
                "content": "import re\n\ndef word_count(text):\n    \"\"\"Counts the frequency of each word in a string, ignoring case and punctuation.\"\"\"\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    counts = {}\n    for word in words:\n        counts[word] = counts.get(word, 0) + 1\n    return counts",
                "grade": "correct",
                "snapshot_id": 83,
                "student_id": 91,
                "timestamp": "2025-06-10 15:41:12"
              }
          ]
        },
        "submissionTimes": {
          "submission_times": [
            {
              "student_id": 68,
              "timestamp": "2025-06-10 15:34:25"
            },
            {
              "student_id": 78,
              "timestamp": "2025-06-10 15:35:28"
            },
            {
              "student_id": 82,
              "timestamp": "2025-06-10 15:35:36"
            },
            {
              "student_id": 70,
              "timestamp": "2025-06-10 15:36:18"
            },
            {
              "student_id": 56,
              "timestamp": "2025-06-10 15:37:07"
            },
            {
              "student_id": 61,
              "timestamp": "2025-06-10 15:37:25"
            },
            {
              "student_id": 85,
              "timestamp": "2025-06-10 15:37:32"
            },
            {
                "student_id": 86,
                "timestamp": "2025-06-10 15:40:02"
              },
              {
                "student_id": 87,
                "timestamp": "2025-06-10 15:40:54"
              },
              {
                "student_id": 89,
                "timestamp": "2025-06-10 15:38:22"
              },
              {
                "student_id": 90,
                "timestamp": "2025-06-10 15:40:29"
              },
              {
                "student_id": 91,
                "timestamp": "2025-06-10 15:41:12"
              },
              {
                "student_id": 92,
                "timestamp": "2025-06-10 15:39:10"
              },
              {
                "student_id": 96,
                "timestamp": "2025-06-10 15:36:20"
              },
              {
                "student_id": 97,
                "timestamp": "2025-06-10 15:32:58"
              },
              {
                "student_id": 98,
                "timestamp": "2025-06-10 15:35:05"
              },
              {
                "student_id": 100,
                "timestamp": "2025-06-10 15:35:52"
              },
              {
                "student_id": 102,
                "timestamp": "2025-06-10 15:39:15"
              },
              {
                "student_id": 105,
                "timestamp": "2025-06-10 15:36:59"
              },
              {
                "student_id": 107,
                "timestamp": "2025-06-10 15:34:25"
              },
              {
                "student_id": 110,
                "timestamp": "2025-06-10 15:36:09"
              }
          ]
        },
    "taInterventions": {
        "interventions": []
    }
}